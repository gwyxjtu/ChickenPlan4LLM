# 自然语言 -> 描述性json
info_prompt_template = """
你是一个优化专家团队中的数学建模专家。团队的目标是解决一个能源系统设备容量规划的最优化问题。\
你的责任是从用户输入的问题描述与需求中，提取用于最优化问题数学建模的信息，构建并输出一个描述模型背景、约束条件、目标函数、参数和优化变量的json文件。

现在请根据由```分隔的示例，学习如何识别新的文本来构建并输出json，然后完成识别最后由---分隔的用户输入并输出所需要的json文件。
```
**用户输入**：
{example_user_input}

**输出**：
{example_output}
```

由---分隔的是输入用户输入的项目信息，包括项目描述、项目地理位置、土地使用情况、项目供能对象描述、项目预期描述。
---
**用户输入**：
{user_input}
---

请注意：
- 只生成json文件，不要生成其他文本。
- 请严格按照如下格式构建输出的json文件：
{{
    "背景知识": "描述项目的背景知识",
    "约束条件": ["约束条件1", "约束条件2", ...],
    "目标函数": "描述目标函数",
    "参数": [
        {{"参数集信息": "参数集1信息描述", "具体内容": "参数集1内容描述", "符号": ["符号1", "符号2", ...]}},
        {{"参数集信息": "参数集2信息描述", "具体内容": "参数集2内容描述", "符号": ["符号1", "符号2", ...]}},
        ...
    ],
    "变量": [
        {{"变量集信息": "变量集1信息描述", "具体内容": "变量集1内容描述", "符号": ["符号1", "符号2", ...]}},
        {{"变量集信息": "变量集2信息描述", "具体内容": "变量集2内容描述", "符号": ["符号1", "符号2", ...]}},
        ...
    ]
}}
- 每个约束条件只生成一个约束条件字符串，不要包含多个约束条件。

现在，请深呼吸，逐步完成这个任务。
"""

# 描述性json -> 参数json
param_prompt_template = """
你是一个优化专家团队中的信息提取专家。团队的目标是解决一个能源系统设备容量规划的最优化问题。\
你的责任是根据"用户输入的问题描述与需求"和"从用户输入中提取的对该问题中所需参数的信息描述"，生成该最优化问题所需参数的json文件，其中需包含各参数的值，且值需符合用户对参数值的需求。

现在请根据由```分隔的示例，学习如何识别新的文本来构建并输出json，然后完成识别最后由---分隔的"用户输入"和"问题中各参数的信息描述"，并输出所需要的json文件。
```
**输入1，用户输入的问题描述与需求**：
{example_user_input}
**输入2，问题中各参数的信息描述**：
{example_param_info_input}

**输出**：
{example_output}
```

由---分隔的是输入的用户需求和模型参数描述json。
---
**输入1，用户输入的问题描述与需求**：
{user_input}
**输入2，问题中各参数的信息描述**：
{param_info_input}
---

请注意：
- 只生成json文件，不要生成其他文本。
- 请遵循由```分隔的示例中输出的格式来构建输出的json文件，并确保输出的json文件格式正确。
- 请确保输出的json文件中的参数值符合用户对参数值的需求。

现在，请深呼吸，逐步完成这个任务。
"""

# 描述性json -> 代码
code_prompt_template = """
你是一个优化专家团队中的专业程序员。团队的目标是解决一个能源系统设备容量规划的最优化问题。\
你的责任是根据"优化问题的模型背景、约束条件、目标函数、参数和优化变量等描述信息"和"该优化问题所需参数"，编写{solver}代码，以完成对能源系统优化问题的建模，包括获取参数、创建变量和添加约束条件等。

现在请根据由```分隔的示例，学习如何识别新的文本来生成新的{solver}代码，然后完成识别最后由---分隔的"优化问题的模型背景、约束条件、目标函数、参数和优化变量等描述信息"和"该优化问题所需参数"，并输出所需要的{solver}代码。
```
**输入1，优化问题的模型背景、约束条件、目标函数、参数和优化变量等描述信息**：
{example_info_input}
**输入2，该优化问题所需参数**：
{example_param_input}

**输出**：
{example_output}
```

由---分隔的是待识别的内容，包含"优化问题的模型背景、约束条件、目标函数、参数和优化变量等描述信息"和"该优化问题所需参数"。
---
{info_input}
{param_input}
---

请注意：
- 只生成{solver}代码，不要生成其他文本。
- 假定参数和变量已经定义，并且已经导入了gurobipy作为gp。

现在，请深呼吸，逐步完成这个任务。
"""
