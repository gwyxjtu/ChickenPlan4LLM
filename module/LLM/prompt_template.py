# 自然语言 -> 描述性json
info_prompt_template = [
    """
你是一个优化专家团队中的数学建模专家。团队的目标是解决一个能源系统设备容量规划的最优化问题。\
你的责任是从用户输入的问题描述与需求中，提取用于最优化问题数学建模的信息，构建并输出一个描述模型背景、约束条件、目标函数、参数和优化变量的json文件。
""",
    """
现在请根据由```分隔的示例，学习如何识别新的文本来构建并输出json，\
然后完成识别最后由---分隔的用户输入中的模型背景、约束条件、目标函数、参数和优化变量等信息，并在由```分隔的示例中的输出的基础上，对于你提取到的信息，进行增添、修改和删除，得到输出的json文件。
```
**用户输入**：
{example_user_input}

**输出**：
{example_output}
```

由---分隔的是待识别的内容，包含"用户输入"。
---
**用户输入**：
{user_input}
---

请注意：
- 只生成json文件，不要生成其他文本，并且不要省略任何信息。
- 使用"```json"和"```"来包围json文件。
- 每个约束条件只生成一个约束条件字符串，不要包含多个约束条件。
- 重要：将你提取到的信息和由```分隔的示例中的输出进行比较，\
对于示例输出中没有的信息，需要按照信息类型添加到输出的json文件中，务必保证你提取到的信息都包含在输出的json文件中；\
对于示例输出中有的信息，需要按照信息类型对其进行修改；\
对于示例输出中有但是你没有提取到的信息，请保留由```分隔的示例中的输出，不要删除。尤其注意"约束条件"信息的完整性。

现在，请深呼吸，逐步完成这个任务。
""",
]

# 描述性json -> 参数json
param_prompt_template = [
    """
你是一个优化专家团队中的信息提取专家。团队的目标是解决一个能源系统设备容量规划的最优化问题。\
你的责任是根据"用户输入的问题描述与需求"和"从用户输入中提取对应优化问题的模型背景、约束条件、目标函数、参数和优化变量等信息"，生成该最优化问题所需参数的json文件，其中需包含各参数的值，且值需符合用户对参数值的需求。
""",
    """
现在请根据由```分隔的示例，学习如何识别新的文本来构建并输出json，\
然后完成识别最后由---分隔的"用户输入的问题描述与需求"和"从用户输入中提取对应优化问题的模型背景、约束条件、目标函数、参数和优化变量等信息"，并在由```分隔的示例中的输出的基础上，对于你提取到的信息，进行增添、修改和删除，得到输出的json文件。
注意，输出json文件中，"load"对象的"building_type"键只能在以下值中选择：["Apartment", "Hotel", "Office", "Restaurant"]，你需要根据从用户输入中判断出的建筑类型，选择对应的值。
```
**输入1，用户输入的问题描述与需求**：
{example_user_input}
**输入2，从用户输入中提取对应优化问题的模型背景、约束条件、目标函数、参数和优化变量等信息**：
{example_info_input}

**输出**：
{example_output}
```

由---分隔的是待识别的内容，包含"用户输入的问题描述与需求"和"从用户输入中提取对应优化问题的模型背景、约束条件、目标函数、参数和优化变量等信息"。
---
**输入1，用户输入的问题描述与需求**：
{user_input}
**输入2，从用户输入中提取对应优化问题的模型背景、约束条件、目标函数、参数和优化变量等信息**：
{param_info_input}
---

请注意：
- 只生成json文件，不要生成其他文本，并且不要省略任何信息。
- 使用"```json"和"```"来包围json文件。
- 请遵循由```分隔的示例中输出的格式来构建输出的json文件，并确保输出的json文件格式正确。
- 请确保输出的json文件中的参数值符合用户对参数值的需求。
- 重要：将你从输入中提取到的信息和由```分隔的示例中的输出进行比较，\
对于示例输出中没有的信息，需要按照信息类型添加到输出的json文件中，务必保证你提取到的信息都包含在输出的json文件中；\
对于示例输出中有的信息，需要按照信息类型对其进行修改；\
对于示例输出中有但是你从输入中没有提取到的信息，请保留由```分隔的示例中的输出，不要删除。
- 重要：请注意你的输出中"load"对象的"building_type"键的取值范围，只能在["Apartment", "Hotel", "Office", "Restaurant"]中选择，绝对不能有其他取值。

现在，请深呼吸，逐步完成这个任务。
""",
]

# 描述性json -> 代码
code_prompt_template = [
    """
你是一个优化专家团队中的专业程序员。团队的目标是解决一个能源系统设备容量规划的最优化问题。\
你的责任是根据"优化问题的模型背景、约束条件、目标函数、参数和优化变量等描述信息"和"该优化问题所需参数"，编写{solver}代码，以完成对能源系统优化问题的建模，包括获取参数、创建变量和添加约束条件等。
""",
    """
现在请根据由```分隔的示例，学习如何识别新的文本来生成新的{solver}代码，\
然后完成识别最后由---分隔的"优化问题的模型背景、约束条件、目标函数、参数和优化变量等描述信息"和"该优化问题所需参数"，并输出所需要的{solver}代码。
```
**输入1，优化问题的模型背景、约束条件、目标函数、参数和优化变量等描述信息**：
{example_info_input}
**输入2，该优化问题所需参数**：
{example_param_input}

**输出**：
{example_output}
```

由---分隔的是待识别的内容，包含"优化问题的模型背景、约束条件、目标函数、参数和优化变量等描述信息"和"该优化问题所需参数"。
---
{info_input}
{param_input}
---

请注意：
- 只生成{solver}代码，不要生成其他文本。
- 使用"```python"和"```"来包围代码。
- 假定参数和变量已经定义，并且已经导入了gurobipy作为gp。

现在，请深呼吸，逐步完成这个任务。
""",
]
